services:
    cache:
      image: "redis:alpine"
      command: redis-server
      ports:
        - "6379:6379"

    db:
      image: pgvector/pgvector:pg16 #postgis/postgis:latest
      ports:
        - "5434:5432"
      environment:
        POSTGRES_DB: "llm"
        POSTGRES_USER: "llm"
        POSTGRES_PASSWORD: "llm"
      volumes:
        # - ./initdb.sh:/docker-entrypoint-initdb.d/initdb.sh
        - db-data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U llm"]
        interval: 10s
        timeout: 5s
        retries: 5
      logging:
          options:
              max-size: "10m"
              max-file: "3"

    telegrambot:
      environment:
        - OPENAI_ENDPOINT=http://llm-server:8000/v1
        - OPENAI_KEY=nokey
        - BOT_TOKEN=${BOT_TOKEN}
        - CHATS_FOLDER=/chats
      depends_on:
        - llm-proxy
      image: sft-bot
      volumes:
       - ./chats:/chats
      restart: always
      logging:
       options:
         max-size: "10m"
         max-file: "3"
      profiles:
        - donotstart


    llm-server:
      ports:
       - '8080:8000'
      restart: always
      volumes:
        - ./models:/models
        #- ./grammar:/grammar
      image:
        ghcr.io/ggerganov/llama.cpp:server
      command:
        -m /models/BlackBox-Coder-3B-F32.gguf --port 8000 --host 0.0.0.0 -n 512 #--grammar-file /grammar/cp.gbnf

    frontend:
     depends_on:
       - backend
     image: sft-frontend
     volumes:
       - ./docker/frontend_appsettings.json:/usr/share/nginx/html/appsettings.json
       - ./docker/local.nginx.conf:/etc/nginx/nginx.conf
       - ./docker/cert/aspnetapp.crt:/usr/nginx/ssl.crt
       - ./docker/cert/aspnetapp.key:/usr/nginx/ssl.key
       - ./docker/cert/aspnetapp.pass:/usr/nginx/ssl.pass
     restart: always
     ports:
       - '5003:80'
       - '5002:443'
     logging:
       options:
         max-size: "10m"
         max-file: "3"

    backend:
     depends_on:
       - db
     image: sft-backend
     volumes:
       - ./docker/data/cert:/cert
       - ./docker/data/backend:/data/fs:Z
       - ./docker/cert:/https/
     restart: always
     environment:
        - ConnectionStrings__AppDbContext=Host=db;Port=5432;Database=llm;Username=llm;Password=llm;Trust Server Certificate=true
        - FrontendUrl=https://localhost:5002
        - BackendUrl=https://localhost:5001
        - LlmEndpoint=http://llm-server:8000/v1
        - Options__RootFsPath=/data/fs
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=https://+:443;http://+:80
        - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
        - ASPNETCORE_Kestrel__Certificates__Default__Password=test
     ports:
       - '5000:80'
       - '5001:443'
     logging:
       options:
         max-size: "10m"
         max-file: "3"

volumes:
  db-data: